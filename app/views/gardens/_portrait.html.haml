
.col-md-6.col-md-push-2
  %div.chart.attribute-holder{age: garden.age, length: garden.get_length, gnarling: garden.comment_quality, id: garden.name, initialise: "true", type: garden.classify_tree, class: garden.name}

    %svg{viewBox: "0 0 840 600", class: garden.language}
      %g{ class: "#{garden.name}"}
  = link_to user_garden_path(@user, @garden), method: :delete do
    = image_tag 'axe2.png', class: "delete-icon"\

.col-md-2.col-md-pull-6.left-nav
  %ul.side-gardens
    - user.gardens.each do |side_garden|
      - if side_garden != garden
        %li{"data-toggle" => "tooltip", "data-placement" => "bottom", "title" => "", "data-original-title" => side_garden.name}
          = link_to "javascript:void(0)", class: "load-portrait", ajax_path: user_garden_path(user, side_garden) do
            %div.chart.attribute-holder{age: side_garden.age, length: side_garden.get_length, gnarling: side_garden.comment_quality, id: side_garden.name, initialise: "true", type: side_garden.classify_tree, class: side_garden.name}
              %svg{viewBox: "0 0 840 600", class: "#{side_garden.language} grey-tree"}
                %g{ class: "#{side_garden.name}"}


.col-md-4.right-info
  = link_to "Get Commits", "javascript:void(0)", class: "commits-log", ajax_path: git_api_commits_user_garden_path(user, garden)
  %br
  = link_to "Grow Tree", user_garden_growth_rings_path(user, garden), method: :post
  %div
    %p Repository has X commits. 
    %p Trees are drawn recursively with a number of iterations equal to log2(commits). This makes it possible to draw "interesting" trees to represent both small and large repositories. By using a log transformation on the data it is possible to render a range of commit values from 1 to ~ 40,000 using 1 to 15 recursions.
    %p
      = garden.sha_key_dates.count
      Commits
    %p Repository has X contributors
    %p The number of contributors to a repository determine the "type" of tree drawn. Repositories with 3 or fewer contributors will, by default, draw a "pine" style tree using a 3 path pattern with a longer central "trunk" and shorter side "branches". Repositories with 4 or more contributors are drawn in an "oak" style suing a 2 path pattern and "branches" of equal length.
    %p
      = garden.contributors
      Contributors
    %p Repository has an median average of X lines of code per commit
    %p The median lines of code per submit is using to determine the length of the branches. A median average was used in an attempt to reduce the impact of the inclusion of vendor assets such as bootstrap and angular on the calculation. By adjusting the "branch" length it is possible to visually distinguish reposiotiries with a few large commits from a repository with many smaller commits.
    %br
    = "Last updated #{garden.last_updated.strftime("%l:%M %p")} on #{garden.last_updated.strftime("%m/%d/%Y")}"
    %br
    = garden.comment_quality
    %br
    = "Median lines of code: #{garden.get_length} "
    %br
    = garden.age

%script{:src => "/assets/main.js?body=1"}